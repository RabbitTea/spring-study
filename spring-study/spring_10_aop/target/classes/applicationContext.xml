<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="https://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="userService" class="com.sandra.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.sandra.log.BeforeLog"/>
    <bean id="afterLog" class="com.sandra.log.AfterLog"/>

    <!--Spring来完成AOP代理，使得service专注做service的事情，Log专注做log的事情-->
    <!--方式一：使用原生Spring API接口-->
    <!--配置AOP：需要导入AOP的约束-->
    <aop:config>
        <!--切入点： expression———表达式；execution——要执行的位置！返回类型 全限定类.方法.(参数)-->
        <aop:pointcut id="pointcut" expression="execution(* com.sandra.service.UserServiceImpl.*(..))"/>
        <!--可配置多个切入点-->

        <!--执行环绕增加！这里的意思是把beforeLog这个类，切入到上面切入点的位置上-->
        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>
    </aop:config>



    <!--方式二：自定义类实现AOP-->
    <!--<bean id="diy" class="com.sandra.diy.DiyPointCut"/>-->

    <!--<aop:config>-->
        <!--&lt;!&ndash;自定义切面；ref：要引用的切入类&ndash;&gt;-->
        <!--<aop:aspect ref="diy">-->
            <!--&lt;!&ndash;切入点&ndash;&gt;-->
            <!--<aop:pointcut id="point" expression="execution(* com.sandra.service.UserServiceImpl.*(..))"/>-->

            <!--&lt;!&ndash;通知；表示：在id为point的这个切入点前后执行这个名为before和after的方法&ndash;&gt;-->
            <!--<aop:before method="before" pointcut-ref="point"/>-->
            <!--<aop:after method="after" pointcut-ref="point"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->


</beans>